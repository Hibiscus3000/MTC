import MTC/lab7/AST;

export
{
    calc(e : Expr) -> Rational;
	calcVariables(e : Expr, defs : [string]) -> Rational;
	calcVariablesDefsAsPairs(e : Expr, defPairs : [Pair<Var,Expr>]) -> Rational;
}

calc(e)
{
	calcVariables(e,[]);
}

calcVariables(e, defs)
{
	calcVariablesDefsAsPairs(e,s2varDefPairs(defs));
}

calcVariablesDefsAsPairs(e, defPairs)
{
	switch(e : Expr)
	{
		Div(e1,e2) :
		{
			e1v = calcVariablesDefsAsPairs(e1,defPairs);
			e2v = calcVariablesDefsAsPairs(e2,defPairs);
			getRational(e1v.numerator * e2v.denominator, e2v.numerator * e1v.denominator);
		}
		Product(e1,e2) :
		{
			e1v = calcVariablesDefsAsPairs(e1,defPairs);
			e2v = calcVariablesDefsAsPairs(e2,defPairs);
			getRational(e1v.numerator * e2v.numerator, e1v.denominator * e2v.denominator);
		}
		Add(e1,e2) :
		{
			e1v = calcVariablesDefsAsPairs(e1,defPairs);
			e2v = calcVariablesDefsAsPairs(e2,defPairs);
			getRational(e1v.numerator * e2v.denominator + e2v.numerator * e1v.denominator,
				e1v.denominator * e2v.denominator);
		}
		Sub(e1,e2) :
		{
			e1v = calcVariablesDefsAsPairs(e1,defPairs);
			e2v = calcVariablesDefsAsPairs(e2,defPairs);
			getRational(e1v.numerator * e2v.denominator - e2v.numerator * e1v.denominator,
				e1v.denominator * e2v.denominator);
		}
		Neg(expr) :
		{
			ev = calcVariablesDefsAsPairs(expr,defPairs);
			getRational(-ev.numerator,ev.denominator);
		}
		Var(s) :
			calcVariablesDefsAsPairs(var2e(s,defPairs),defPairs);
		Rational(n,d) :
			getRational(n,d)
	}
}