import MTC/lab7/AST;

export
{
    e2s(e : Expr) -> string;
	e2sVariables(e : Expr, defs : [string]) -> string;
    r2s(rational : Rational, neg : int) -> string;
}

e2s(e)
{
	e2sVariables(e,[]);
}

e2sVariables(e,defs)
{
	e2sParentheses(e,false, false,1, s2varDefPairs(defs));
}

e2sParentheses(e : Expr, underDiv : bool, underMulDivOrNeg : bool,
	neg : int, defs : [Pair<Var,Rational>]) -> string
{
	switch (e : Expr)
	{
		Div(e1,e2) :
			e2sParentheses(e1,true, true,neg,defs) + " / " + e2sParentheses(e2,true, true,1,defs);
		Product(e1,e2) :
			(if (underDiv) "(" else "") + 
			e2sParentheses(e1,false, true,neg,defs) + " * " +
			e2sParentheses(e2,false, true,1,defs) +
			(if (underDiv) ")" else "");
		Add(e1,e2) :
			(if (underMulDivOrNeg) "(" else "") +
                (if (-1 == neg) "-" + e2sParentheses(e1,false, true,1,defs)
                else e2sParentheses(e1,false, false,1,defs)) +
                (if (1 == neg) " + " + e2sParentheses(e2,false, false,1,defs)
                else " - " + e2sParentheses(e2,false, true,1,defs)) +
                (if (underMulDivOrNeg) ")" else "");
		Sub(e1,e2) :
			(if (underMulDivOrNeg) "(" else "") +
                (if (-1 == neg) "-" + e2sParentheses(e1,false, true,1,defs)
                else e2sParentheses(e1,false, false,1,defs)) +
                (if (1 == neg) " - " + e2sParentheses(e2,false, false,1,defs)
                else " + " + e2sParentheses(e2,false, true,1,defs)) +
                (if (underMulDivOrNeg) ")" else "");
		Neg(expr) :
			e2sParentheses(expr,false, true,-1 * neg,defs);
		Var(s) :
		{
			r = var2r(s,defs);
			if (0 == r.denominator && 1 == r.numerator)
				(if (1 == neg) "" else "-") + s
			else
				r2s(getRational(r.numerator,r.denominator),neg);
		}
		Rational(n,d) :
			r2s(getRational(n,d),neg)
	}
}

r2s(rational, neg)
{
	if (0 == rational.denominator)
		"INVALID"
	else
		if (1 == rational.denominator)
			i2s(neg * rational.numerator)
		else
			i2s(neg * rational.numerator) + "/" + i2s(rational.denominator);
}