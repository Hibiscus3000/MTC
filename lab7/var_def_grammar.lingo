vardef = var:v '=' expr:e {Pair(:v,:e)};
expr = sub:s '+' expr:e {Add(:s,:e)} | sub;
sub = proddiv:p subsub*:s {buildSub(:p,:s)}; 
subsub = sp* '-' proddiv:p {:p};
proddiv = neg:n '*' proddiv:p {Product(:n,:p)} |
     neg:n '/' proddiv:p {Div(:n,:p)} |
     neg;
neg = sp* '-' neg:n {Neg(:n)} | parentheses;
parentheses = sp* '(' sp* expr:e sp* ')' sp* {:e} | arg;
arg = int | var;
int = sp* digit+$d sp* {Rational(s2i($d),1)};
var = sp* (letter (letter | digit)*)$str sp* {Var($str)};
letter = 'a' - 'z' | 'A' - 'Z' | '_';
digit = '0'-'9';
sp = ' ';