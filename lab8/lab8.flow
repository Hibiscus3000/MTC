import MTC/lab7/e2s;

export
{
    derivation(e : Expr, var : string) -> Expr;
    simplifyConsts(e : Expr) -> Expr;
}

derivation(e,var)
{
    switch(e : Expr)
    {
        Div(e1,e2) : 
        {
            e1der = derivation(e1,var);
            e2der = derivation(e2,var);
            if (e1der != Rational(0,1))
            {
                if (e2der != Rational(0,1))
                    Div(Sub(Product(e1der,e2),Product(e2der,e1)),Product(e2,e2))
                else
                    Div(derivation(e1,var),e2);
            }
            else 
            {
                if (e2der != Rational(0,1))
                    Neg(Div(Product(e2der,e1),Product(e2,e2)))
                else
                    Rational(0,1);
            }   
        }
        Product(e1,e2) :
        {
            e1der = derivation(e1,var);
            e2der = derivation(e2,var);
            if (e1der != Rational(0,1))
            {
                if (e2der != Rational(0,1))
                    Add(Product(e2der,e1),Product(e1der,e2))
                else
                    Product(e1der, e2);
            }
            else 
            {
                if (e2der != Rational(0,1))
                    Product(e2der, e1)
                else
                    Rational(0,1);
            }   
        }
        Sub(e1,e2) :
        {
            e1der = derivation(e1,var);
            e2der = derivation(e2,var);
            if (e1der != Rational(0,1))
            {
                if (e2der != Rational(0,1))
                    Sub(e1der,e2der)
                else
                    e1der;
            }
            else 
            {
                if (e2der != Rational(0,1))
                    Neg(e2der)
                else
                    Rational(0,1);
            }
        }
        Add(e1,e2) :
        {
            e1der = derivation(e1,var);
            e2der = derivation(e2,var);
            if (e1der != Rational(0,1))
            {
                if (e2der != Rational(0,1))
                    Add(e1der,e2der)
                else
                    e1der;
            }
            else 
            {
                if (e2der != Rational(0,1))
                    e2der
                else
                    Rational(0,1);
            }
        }
        Neg(e1) :
        {
            e1der = derivation(e1,var);
            if (e1der != Rational(0,1))
                Neg(e1der)
            else
                Rational(0,1);
        }
        Var(s) : Rational(1,1);
        Rational(n,d) : Rational(0,1);
    }
}

simplifyConsts(e)
{
    switch(e : Expr)
    {
        Div(e1,e2) : 
        {
            e1Simplified = simplifyConsts(e1);
            e2Simplified = simplifyConsts(e2);
            if (checkDenominator(e1Simplified,0) || checkDenominator(e2Simplified,0)
                || checkNumerator(e2Simplified,0))
                Rational(0,0)
            else
            {
                if (isRational(e1Simplified))
                {
                    if (isRational(e2Simplified))
                        calc(Div(e1Simplified,e2Simplified))
                    else
                    {
                        if (checkNumerator(e1Simplified,0))
                            Rational(0,1)
                        else
                            Div(e1Simplified,e2Simplified);
                    }
                }
                else
                {
                    if (isRational(e2Simplified))
                    {
                        if (checkNumeratorEqualsDenominator(e2Simplified))
                            e1Simplified
                        else
                            Product(flip(e2Simplified),e1Simplified);
                    }
                    else
                        Div(e1Simplified,e2Simplified);
                }
            }
        }
        Product(e1,e2) :
        {
            e1Simplified = simplifyConsts(e1);
            e2Simplified = simplifyConsts(e2);
            if (checkDenominator(e1Simplified,0) || checkDenominator(e2Simplified,0))
                Rational(0,0)
            else
            {
                if (checkNumerator(e1Simplified,0) || checkNumerator(e2Simplified,0))
                    Rational(0,1)
                else
                {
                    if (isRational(e1Simplified))
                    {
                        if (isRational(e2Simplified))
                            calc(Product(e1Simplified,e2Simplified))
                        else
                        {
                            if (checkNumeratorEqualsDenominator(e1Simplified))
                                e2Simplified
                            else
                                Product(e1Simplified,e2Simplified);
                        }
                    }
                    else
                    {
                        if (isRational(e2Simplified) && checkNumeratorEqualsDenominator(e2Simplified))
                            e1Simplified
                        else
                            Product(e2Simplified, e1Simplified);
                    }
                }
            }
        }
        Sub(e1,e2) :
        {
            e1Simplified = simplifyConsts(e1);
            e2Simplified = simplifyConsts(e2);
            if (checkDenominator(e1Simplified,0) || checkDenominator(e2Simplified,0))
                Rational(0,0)
            else
            {
                if (isRational(e1Simplified) && isRational(e2Simplified))
                        calc(Sub(e1Simplified,e2Simplified))
                else
                {
                    if (checkNumerator(e2Simplified,0))
                    {
                        if (checkNumerator(e1Simplified,0))
                            Rational(0,1)
                        else
                            e1Simplified
                    }
                    else
                    {
                        if (checkNumerator(e1Simplified,0))
                            Neg(e2Simplified)
                        else
                            Sub(e1Simplified,e2Simplified);
                    }
                }
            }
        }
        Add(e1,e2) :
        {
            e1Simplified = simplifyConsts(e1);
            e2Simplified = simplifyConsts(e2);
            if (checkDenominator(e1Simplified,0) || checkDenominator(e2Simplified,0))
                Rational(0,0)
            else
            {
                if (isRational(e1Simplified) && isRational(e2Simplified))
                        calc(Add(e1Simplified,e2Simplified))
                else
                {
                    if (checkNumerator(e2Simplified,0))
                    {
                        if (checkNumerator(e1Simplified,0))
                            Rational(0,1)
                        else
                            e1Simplified
                    }
                    else
                    {
                        if (checkNumerator(e1Simplified,0))
                            e2Simplified
                        else
                            Add(e1Simplified,e2Simplified);
                    }
                }
            }
        }
        Neg(e1) :
        {
            e1Simplified = simplifyConsts(e1);
            if (checkDenominator(e1Simplified,0))
                Rational(0,0)
            else
            {
                if (isRational(e1Simplified))
                    calc(Neg(e1Simplified))
                else
                    Neg(e1Simplified);
            }
        }
        Var(s) : e;
        Rational(n,d) : getRational(n,d);
    }
}

isRational(e)
{
    switch (e : Expr)
    {
        Rational(n,d) : true;
        default : false;
    }
}