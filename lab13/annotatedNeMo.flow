import MTC/lab11/NeMo2s;

export
{
    AnnotatedProgram(precondition : PreCondition, program : Program, postcondition : PostCondition);
    Formula ::= AOr, AAnd, ANot, ARelationAtom;
        AOr(f1 : Formula, f2 : Formula);
        AAnd(f1 : Formula, f2 : Formula);
        ANot(f : Formula);
    ARelationAtom ::= RelationAtom, Any, Exists, True, False;
        Any(declaration : Declaration,formula : Formula);
        Exists(declaration : Declaration,formula : Formula);
        True();
        False();
    PreCondition(declarations : [Declaration],formula : Formula);
    PostCondition(formula : Formula);

    annotatedNeMoGrammar() -> [PegOp];
}

annotatedNeMoOps : ref Maybe<[PegOp]> = ref None();

annotatedNeMoGrammar()
{
    onlyOnce(annotatedNeMoOps, \ -> {
		compilePegGrammar("#include MTC/lab13/annotatedNeMo_grammar.lingo");
	});
}

